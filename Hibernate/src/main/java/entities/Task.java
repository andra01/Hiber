package entities;
// Generated Jul 13, 2016 9:48:43 AM by Hibernate Tools 5.1.0.Alpha1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Task generated by hbm2java
 */
@Entity
@Table(name = "task", catalog = "taskmanager_db")
public class Task implements java.io.Serializable {

	private TaskId id;
	private Priority priority;
	private Project project;
	private Release release;
	private Status status;
	private String description;
	private String taskTitle;
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<UserHasTask> userHasTasks = new HashSet<UserHasTask>(0);

	public Task() {
	}

	public Task(TaskId id, Priority priority, Project project, Release release, Status status) {
		this.id = id;
		this.priority = priority;
		this.project = project;
		this.release = release;
		this.status = status;
	}

	public Task(TaskId id, Priority priority, Project project, Release release, Status status, String description,
			String taskTitle, Set<Comment> comments, Set<UserHasTask> userHasTasks) {
		this.id = id;
		this.priority = priority;
		this.project = project;
		this.release = release;
		this.status = status;
		this.description = description;
		this.taskTitle = taskTitle;
		this.comments = comments;
		this.userHasTasks = userHasTasks;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "idTask", column = @Column(name = "idTask", nullable = false)),
			@AttributeOverride(name = "projectIdProject", column = @Column(name = "Project_idProject", nullable = false)),
			@AttributeOverride(name = "priorityIdPriority", column = @Column(name = "Priority_idPriority", nullable = false)),
			@AttributeOverride(name = "statusIdStatus", column = @Column(name = "Status_idStatus", nullable = false)),
			@AttributeOverride(name = "releaseIdRelease", column = @Column(name = "Release_idRelease", nullable = false)) })
	public TaskId getId() {
		return this.id;
	}

	public void setId(TaskId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Priority_idPriority", nullable = false, insertable = false, updatable = false)
	public Priority getPriority() {
		return this.priority;
	}

	public void setPriority(Priority priority) {
		this.priority = priority;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Project_idProject", nullable = false, insertable = false, updatable = false)
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Release_idRelease", nullable = false, insertable = false, updatable = false)
	public Release getRelease() {
		return this.release;
	}

	public void setRelease(Release release) {
		this.release = release;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Status_idStatus", nullable = false, insertable = false, updatable = false)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@Column(name = "Description", length = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "TaskTitle", length = 100)
	public String getTaskTitle() {
		return this.taskTitle;
	}

	public void setTaskTitle(String taskTitle) {
		this.taskTitle = taskTitle;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "task")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "task")
	public Set<UserHasTask> getUserHasTasks() {
		return this.userHasTasks;
	}

	public void setUserHasTasks(Set<UserHasTask> userHasTasks) {
		this.userHasTasks = userHasTasks;
	}

}
